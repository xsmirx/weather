{"version":3,"sources":["redux/appReducer/actions.js","components/AlertError/AlertError.jsx","components/AlertError/AlertErrorContainer.jsx","images/bg3.jpg","components/Loader/Loader.jsx","components/Loader/LoaderContainer.jsx","saga/weatherSaga/actions.js","components/Weather/Weather.jsx","components/Weather/WeatherContainer.jsx","components/BackgroungImage/BackgroundImage.jsx","App.js","redux/appReducer/appReducer.js","redux/geoReducer/actions.js","redux/geoReducer/geoReducer.js","redux/weatherReducer/actions.js","redux/rootReducer.js","redux/weatherReducer/weatherReducer.js","saga/geoSaga/geoSaga.js","api/weatherApi.js","api/config.js","classes/GeolocationError.js","saga/weatherSaga/weatherSaga.js","saga/rootSaga.js","store.js","index.js"],"names":["SET_LOADING","SET_ERROR","SET_VISIBLE_ERROR","DEL_ERROR","setLoadingAC","isLoading","type","AlertError","isVisible","errorName","errorMessage","onClose","Snackbar","open","TransitionComponent","Slide","TransitionProps","direction","Alert","variant","severity","AlertTitle","connect","state","app","error","name","message","dispatch","setTimeout","StyledLoading","styled","div","Loader","LinearProgress","GET_WEATHER_ON_COORDS","getWeatherOnCoordsAC","StyledTemp","Weather","country","temp","feelsLike","clouds","wind","iconLink","onRefresh","Box","maxWidth","Card","elevation","sx","backdropFilter","background","CardContent","Typography","src","alt","Math","round","CardActions","IconButton","size","onClick","weather","sys","main","feels_like","description","speed","icon","BackgroundImage","props","image","App","BgImage","LoaderContainer","AlertErrorContainer","Container","paddingTop","WeatherContainer","initialState","SET_GEOLOCATION","latitude","longitude","SET_WEATHER","rootReducer","combineReducers","action","geo","payload","geoSaga","getGeoCoords","fork","navigator","geolocation","getCurrentPosition","position","store","coords","weatherApi","lat","lon","axios","then","response","data","GeolocationError","Error","weatherSaga","getWeatherOnCoords","takeLeading","put","select","rootSaga","spawn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleWare","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.284682cc.chunk.js","sourcesContent":["//action types\nexport const SET_LOADING = \"appReducer/SET_LOADING\";\nexport const SET_ERROR = \"appReducer/SET_ERROR\";\nexport const SET_VISIBLE_ERROR = \"appReducer/SET_VISIBLE_ERROR\";\nexport const DEL_ERROR = \"appReducer/DEL_ERROR\";\n\n//action creators\nexport const setLoadingAC = (isLoading) => ({ type: SET_LOADING, isLoading });\nexport const setErrorAC = (error) => ({\n  type: SET_ERROR,\n  error,\n});\nexport const setVisibleError = (isVisible) => ({\n  type: SET_VISIBLE_ERROR,\n  isVisible,\n});\nexport const delErrorAC = () => ({ type: DEL_ERROR });\n","import { Alert, AlertTitle, Slide, Snackbar } from \"@mui/material\";\n\nconst AlertError = ({ isVisible, errorName, errorMessage, onClose }) => {\n  const handleClose = () => {\n    onClose();\n  };\n  return (\n    <>\n      <Snackbar\n        open={isVisible}\n        TransitionComponent={Slide}\n        TransitionProps={{ direction: \"up\" }}\n        key={\"up\"}\n      >\n        <Alert variant=\"standard\" severity=\"error\" onClose={handleClose}>\n          <AlertTitle>{errorName}</AlertTitle>\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default AlertError;\n","import { connect } from \"react-redux\";\nimport { delErrorAC, setVisibleError } from \"../../redux/appReducer/actions\";\nimport AlertError from \"./AlertError\";\n\nconst mstp = (state) => ({\n  isVisible: state.app.error.isVisible,\n  errorName: state.app.error.name,\n  errorMessage: state.app.error.message,\n});\n\nconst mdtp = (dispatch) => ({\n  onClose: () => {\n    dispatch(setVisibleError(false));\n    setTimeout(() => dispatch(delErrorAC()), 300);\n  },\n});\n\nexport default connect(mstp, mdtp)(AlertError);\n","export default __webpack_public_path__ + \"static/media/bg3.b32faba5.jpg\";","import { LinearProgress } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nconst StyledLoading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n`;\n\nconst Loader = ({ isLoading }) => {\n  return <StyledLoading>{isLoading && <LinearProgress />}</StyledLoading>;\n};\n\nexport default Loader;\n","import { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\n\nconst mstp = (state) => ({ isLoading: state.app.isLoading });\n\nexport default connect(mstp, null)(Loader);\n","//action types for weatherSaga\nexport const GET_WEATHER_ON_COORDS = \"weatherSaga/GET_WEATHER_ON_COORDS\";\n\n//action creators for weatherSaga\nexport const getWeatherOnCoordsAC = () => ({\n  type: GET_WEATHER_ON_COORDS,\n});\n","import {\n  Card,\n  CardActions,\n  CardContent,\n  IconButton,\n  Typography,\n} from \"@mui/material\";\nimport SyncIcon from \"@mui/icons-material/Sync\";\nimport styled from \"styled-components\";\nimport { Box } from \"@mui/system\";\n\nconst StyledTemp = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  align-items: baseline;\n  img {\n    height: 80px;\n  }\n`;\n\nconst Weather = ({\n  name,\n  country,\n  temp,\n  feelsLike,\n  clouds,\n  wind,\n  iconLink,\n  onRefresh,\n}) => {\n  return (\n    <Box maxWidth=\"444px\">\n      {name && temp && (\n        <Card\n          variant=\"elevation\"\n          elevation={5}\n          sx={{\n            backdropFilter: \"blur(4px)\",\n            background: \"rgba(255, 255, 255, 0.25)\",\n          }}\n        >\n          <CardContent>\n            <Typography variant=\"h4\">\n              {name}, {country}\n            </Typography>\n\n            <StyledTemp>\n              <img src={iconLink} alt=\"weather icon\" />\n              <Typography variant=\"h2\">{`${\n                Math.round(temp * 10) / 10\n              }°C`}</Typography>\n            </StyledTemp>\n            <Box>\n              <Typography variant=\"body2\">{`Feels like: ${Math.round(\n                feelsLike\n              )}°C`}</Typography>\n              <Typography variant=\"body2\">{`Clouds: ${clouds}`}</Typography>\n              <Typography variant=\"body2\">{`Wind: ${wind}m/s`}</Typography>\n            </Box>\n          </CardContent>\n          <CardActions>\n            <IconButton size=\"small\" onClick={onRefresh}>\n              <SyncIcon />\n            </IconButton>\n          </CardActions>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default Weather;\n","import { connect } from \"react-redux\";\nimport { getWeatherOnCoordsAC } from \"../../saga/weatherSaga/actions\";\nimport Weather from \"./Weather\";\n\nconst mstp = (state) => ({\n  name: state.weather?.name,\n  country: state.weather?.sys?.country,\n  temp: state.weather?.main?.temp,\n  feelsLike: state.weather?.main?.feels_like,\n  clouds: state.weather?.weather[0]?.description,\n  wind: state.weather?.wind?.speed,\n  iconLink: `http://openweathermap.org/img/wn/${state.weather?.weather[0]?.icon}@4x.png`,\n});\nconst mdtp = (dispatch) => ({\n  onRefresh: () => dispatch(getWeatherOnCoordsAC()),\n});\n\nexport default connect(mstp, mdtp)(Weather);\n","import styled from \"styled-components\";\n\nconst BackgroundImage = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -100;\n\n  background-image: url(${(props) => props.image});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport default BackgroundImage;\n","import { Container } from \"@mui/material\";\nimport AlertErrorContainer from \"./components/AlertError/AlertErrorContainer\";\nimport BgImage from \"./images/bg3.jpg\";\nimport LoaderContainer from \"./components/Loader/LoaderContainer\";\nimport WeatherContainer from \"./components/Weather/WeatherContainer\";\nimport BackgroundImage from \"./components/BackgroungImage/BackgroundImage\";\n\nconst App = () => {\n  return (\n    <>\n      <BackgroundImage image={BgImage} />\n      <LoaderContainer />\n      <AlertErrorContainer />\n      <Container maxWidth=\"xs\" sx={{ paddingTop: \"16px\" }}>\n        <WeatherContainer />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import {\n  SET_ERROR,\n  DEL_ERROR,\n  SET_LOADING,\n  SET_VISIBLE_ERROR,\n} from \"./actions\";\n\nconst initialState = {\n  isLoading: false,\n  error: { name: null, message: null, isVisible: false },\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: {\n          ...state.error,\n          name: action.error.name,\n          message: action.error.message,\n          isVisible: true,\n        },\n      };\n    case SET_VISIBLE_ERROR:\n      return {\n        ...state,\n        error: {\n          ...state.error,\n          isVisible: action.isVisible,\n        },\n      };\n    case DEL_ERROR:\n      return {\n        ...state,\n        error: {\n          ...state.error,\n          name: null,\n          message: null,\n          isVisible: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","//action types\nexport const SET_GEOLOCATION = \"geoReducer/SET_GEOLOCATION\";\n\n//action creators\nexport const setGeolocationAC = (latitude, longitude) => ({\n  type: SET_GEOLOCATION,\n  latitude,\n  longitude,\n});\n","import { SET_GEOLOCATION } from \"./actions\";\n\n//initial state\nconst initialState = { latitude: null, longitude: null };\n\n//reducer\nexport const geoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GEOLOCATION:\n      return {\n        ...state,\n        latitude: action.latitude,\n        longitude: action.longitude,\n      };\n    default:\n      return state;\n  }\n};\n","//action types\nexport const SET_WEATHER = \"weatherReducer/SET_WEATHER\";\n\n//action creators\nexport const setWeatherAC = (payload) => ({ type: SET_WEATHER, payload });\n","import { combineReducers } from \"redux\";\nimport { appReducer } from \"./appReducer/appReducer\";\nimport { geoReducer } from \"./geoReducer/geoReducer\";\nimport { weatherReducer } from \"./weatherReducer/weatherReducer\";\n\nexport const rootReducer = combineReducers({\n  app: appReducer,\n  geo: geoReducer,\n  weather: weatherReducer,\n});\n","import { SET_WEATHER } from \"./actions\";\n\nconst initialState = null;\n\nexport const weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_WEATHER:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { fork } from \"@redux-saga/core/effects\";\nimport { setGeolocationAC } from \"../../redux/geoReducer/actions\";\nimport { getWeatherOnCoordsAC } from \"./../weatherSaga/actions\";\nimport { store } from \"../../store\";\n\n//watcher\nexport function* geoSaga() {\n  yield fork(getGeoCoords);\n}\n\n//workers\nfunction* getGeoCoords() {\n  yield navigator.geolocation.getCurrentPosition((position) => {\n    store.dispatch(\n      setGeolocationAC(position.coords.latitude, position.coords.longitude)\n    );\n    store.dispatch(getWeatherOnCoordsAC());\n  });\n}\n","import * as axios from \"axios\";\nimport { apiKey } from \"./config\";\n\nconst getWeatherOnCoords = (lat, lon) => {\n  return axios\n    .get(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${apiKey}&units=metric`\n    )\n    .then((response) => response.data)\n};\n\nexport const weatherApi = { getWeatherOnCoords };\n","export const apiKey = \"126fad45ab3e35a9cdeb368c5606d982\";","export class GeolocationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"Geolocation Error\";\n    this.message = message || \"Geolocation data not found\";\n  }\n}\n","import { put, select, takeLeading } from \"@redux-saga/core/effects\";\nimport { weatherApi } from \"../../api/weatherApi\";\nimport { GeolocationError } from \"../../classes/GeolocationError\";\nimport { setErrorAC, setLoadingAC } from \"../../redux/appReducer/actions\";\nimport { setWeatherAC } from \"../../redux/weatherReducer/actions\";\nimport { GET_WEATHER_ON_COORDS } from \"./actions\";\n\n//watcher\nexport function* weatherSaga() {\n  yield takeLeading(GET_WEATHER_ON_COORDS, getWeatherOnCoords);\n}\n\n//worker\nfunction* getWeatherOnCoords() {\n  try {\n    yield put(setLoadingAC(true));\n    const lat = yield select((state) => state.geo.latitude);\n    const lon = yield select((state) => state.geo.longitude);\n    if (!lat || !lon) {\n      throw new GeolocationError(\"Requires permission to use geolocation\");\n    }\n    const weather = yield weatherApi.getWeatherOnCoords(lat, lon);\n    yield put(setWeatherAC(weather));\n  } catch (error) {\n    yield put(setErrorAC(error));\n  } finally {\n    yield put(setLoadingAC(false));\n  }\n}\n","import { spawn } from \"redux-saga/effects\";\nimport { geoSaga } from \"./geoSaga/geoSaga\";\nimport { weatherSaga } from \"./weatherSaga/weatherSaga\";\n\nexport function* rootSaga() {\n  // const sagas = [geoSaga, weatherSaga];\n\n  yield spawn(geoSaga);\n  yield spawn(weatherSaga);\n}\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { rootSaga } from \"./saga/rootSaga\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleWare = createSagaMiddleware();\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleWare))\n);\n\nsagaMiddleWare.run(rootSaga);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}