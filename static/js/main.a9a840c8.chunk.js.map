{"version":3,"sources":["images/bg3.jpg","redux/appReducer/actions.js","components/AlertError/AlertError.jsx","components/AlertError/AlertErrorContainer.jsx","components/Loader/Loader.jsx","components/Loader/LoaderContainer.jsx","components/Weather/Weather.jsx","components/Weather/WeatherContainer.jsx","components/BackgroungImage/BackgroundImage.jsx","saga/weatherSaga/actions.js","components/ToolBar/ExploreBtn/ExploreBtn.jsx","redux/weatherReducer/actions.js","components/ListItems/ListItems.jsx","components/ListItems/ListItemsContainer.jsx","components/ToolBar/SearchField/SearchField.jsx","components/ToolBar/SearchField/SearchFieldContainer.js","components/ToolBar/Toolbar.jsx","App.js","redux/appReducer/appReducer.js","redux/geoReducer/actions.js","redux/geoReducer/geoReducer.js","redux/weatherReducer/weatherReducer.js","redux/rootReducer.js","saga/geoSaga/geoSaga.js","api/instance.js","api/weatherApi.js","classes/GeolocationError.js","saga/weatherSaga/weatherSaga.js","saga/rootSaga.js","store.js","index.js"],"names":["SET_LOADING","SET_ERROR","SET_VISIBLE_ERROR","DEL_ERROR","setLoadingAC","isLoading","type","setErrorAC","error","AlertError","isVisible","errorName","errorMessage","onClose","Snackbar","open","TransitionComponent","Slide","TransitionProps","direction","Alert","variant","severity","AlertTitle","connect","state","app","name","message","dispatch","setTimeout","StyledLoading","styled","div","Loader","LinearProgress","StyledTemp","Weather","weather","Box","maxWidth","sx","margin","Card","elevation","backdropFilter","background","CardContent","Typography","sys","country","src","icon","alt","Math","round","main","temp","feels_like","description","wind","speed","weatherCard","weatherObject","BackgroundImage","props","image","FIND_PLACES","GET_USER_WEATHER","getUserWeatherAC","getUserWeather","IconButton","aria-label","title","marginLeft","onClick","SET_WEATHER","SET_PLACES","setWeatherAC","payload","StiledList","style","width","bgcolor","ListItems","list","setWeather","items","map","item","ListItemButton","ListItemText","primary","textAlign","coord","lat","lon","id","length","List","listPlaces","weatherObj","StyledForm","Search","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","breakpoints","up","SearchIconWrapper","padding","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","SearchField","getPlaces","formik","useFormik","initialValues","placeName","onSubmit","values","handleSubmit","onChange","handleChange","value","placeholder","inputProps","ListItemsContainer","getPlacesAC","ToolBar","AppBar","Toolbar","noWrap","component","flexGrow","xs","sm","SearchFieldContainer","App","BgImage","LoaderContainer","AlertErrorContainer","Container","WeatherContainer","initialState","SET_GEOLOCATION","latitude","longitude","rootReducer","combineReducers","action","geo","geoSaga","getGeoCoords","fork","navigator","geolocation","getCurrentPosition","store","coords","instance","baseURL","params","appid","units","weatherApi","get","then","response","data","GeolocationError","Error","weatherSaga","getUserCoords","takeLeading","put","select","call","rootSaga","spawn","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleWare","createSagaMiddleware","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9a840c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg3.b32faba5.jpg\";","//action types\nexport const SET_LOADING = \"appReducer/SET_LOADING\";\nexport const SET_ERROR = \"appReducer/SET_ERROR\";\nexport const SET_VISIBLE_ERROR = \"appReducer/SET_VISIBLE_ERROR\";\nexport const DEL_ERROR = \"appReducer/DEL_ERROR\";\n\n//action creators\nexport const setLoadingAC = (isLoading) => ({ type: SET_LOADING, isLoading });\nexport const setErrorAC = (error) => ({\n  type: SET_ERROR,\n  error,\n});\nexport const setVisibleError = (isVisible) => ({\n  type: SET_VISIBLE_ERROR,\n  isVisible,\n});\nexport const delErrorAC = () => ({ type: DEL_ERROR });\n","import { Alert, AlertTitle, Slide, Snackbar } from \"@mui/material\";\n\nconst AlertError = ({ isVisible, errorName, errorMessage, onClose }) => {\n  const handleClose = () => {\n    onClose();\n  };\n  return (\n    <>\n      <Snackbar\n        open={isVisible}\n        TransitionComponent={Slide}\n        TransitionProps={{ direction: \"up\" }}\n        key={\"up\"}\n      >\n        <Alert variant=\"standard\" severity=\"error\" onClose={handleClose}>\n          <AlertTitle>{errorName}</AlertTitle>\n          {errorMessage}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default AlertError;\n","import { connect } from \"react-redux\";\nimport { delErrorAC, setVisibleError } from \"../../redux/appReducer/actions\";\nimport AlertError from \"./AlertError\";\n\nconst mstp = (state) => ({\n  isVisible: state.app.error.isVisible,\n  errorName: state.app.error.name,\n  errorMessage: state.app.error.message,\n});\n\nconst mdtp = (dispatch) => ({\n  onClose: () => {\n    dispatch(setVisibleError(false));\n    setTimeout(() => dispatch(delErrorAC()), 300);\n  },\n});\n\nexport default connect(mstp, mdtp)(AlertError);\n","import { LinearProgress } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nconst StyledLoading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n`;\n\nconst Loader = ({ isLoading }) => {\n  return <StyledLoading>{isLoading && <LinearProgress />}</StyledLoading>;\n};\n\nexport default Loader;\n","import { connect } from \"react-redux\";\nimport Loader from \"./Loader\";\n\nconst mstp = (state) => ({ isLoading: state.app.isLoading });\n\nexport default connect(mstp, null)(Loader);\n","import { Card, CardContent, Typography } from \"@mui/material\";\nimport styled from \"styled-components\";\nimport { Box } from \"@mui/system\";\n\nconst StyledTemp = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  align-items: baseline;\n  img {\n    height: 80px;\n  }\n`;\n\nconst Weather = ({ isLoading, weather }) => {\n  return (\n    <Box maxWidth=\"444px\" sx={{ margin: \"16px 0 0 0\" }}>\n      {weather && (\n        <Card\n          variant=\"elevation\"\n          elevation={5}\n          sx={{\n            backdropFilter: \"blur(4px)\",\n            background: \"rgba(255, 255, 255, 0.25)\",\n          }}\n        >\n          <CardContent>\n            <Typography variant=\"h4\">\n              {weather.name}, {weather.sys.country}\n            </Typography>\n\n            <StyledTemp>\n              <img\n                src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`}\n                alt=\"weather icon\"\n              />\n              <Typography variant=\"h2\">{`${\n                Math.round(weather.main.temp * 10) / 10\n              }°C`}</Typography>\n            </StyledTemp>\n            <Box>\n              <Typography variant=\"body2\">{`Feels like: ${Math.round(\n                weather.main.feels_like\n              )}°C`}</Typography>\n              <Typography variant=\"body2\">{`Clouds: ${weather.weather[0].description}`}</Typography>\n              <Typography variant=\"body2\">{`Wind: ${weather.wind.speed}m/s`}</Typography>\n            </Box>\n          </CardContent>\n        </Card>\n      )}\n    </Box>\n  );\n};\n\nexport default Weather;\n","import { connect } from \"react-redux\";\nimport Weather from \"./Weather\";\n\nconst mstp = (state) => ({\n  isLoading: state.weather.weatherCard.isLoading,\n  weather: state.weather.weatherCard.weatherObject,\n});\n\nexport default connect(mstp, null)(Weather);\n","import styled from \"styled-components\";\n\nconst BackgroundImage = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  z-index: -100;\n\n  background-image: url(${(props) => props.image});\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\n\nexport default BackgroundImage;\n","//action types for weatherSaga\nexport const FIND_PLACES = \"weatherSaga/FIND_PLACES\";\nexport const GET_USER_WEATHER = \"weatherSaga/GET_USER_WEATHER\";\nexport const GET_WEATHER_BY_ID = \"weatherSaga/GET_WEATHER_BY_ID\";\nexport const GET_WEATHER_BY_ZIPCODE = \"weatherSaga/GET_WEATHER_BY_ZIPCODE\";\nexport const GET_WEATHER_BY_COORDS = \"weatherSaga/GET_WEATHER_ON_COORDS\";\nexport const GET_WEATHER_BY_PLACENAME = \"weatherSaga/GET_WEATHER_ON_PLACENAME\";\n\n//action creators for weatherSaga\nexport const getPlacesAC = (placeName) => ({ type: FIND_PLACES, placeName });\nexport const getUserWeatherAC = () => ({ type: GET_USER_WEATHER });\nexport const getWeatherByIDAC = (cityId) => ({\n  type: GET_WEATHER_BY_ID,\n  cityId,\n});\nexport const getWeatherByZIPCodeAC = (zipCode, countryCode) => ({\n  type: GET_WEATHER_BY_ZIPCODE,\n  zipCode,\n  countryCode,\n});\nexport const getWeatherByCoordsAC = (lat, lon) => ({\n  type: GET_WEATHER_BY_COORDS,\n  lat,\n  lon,\n});\nexport const getWeatherByPlaceNameAC = (placeName) => ({\n  type: GET_WEATHER_BY_PLACENAME,\n  placeName,\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport ExploreIcon from \"@mui/icons-material/Explore\";\nimport { IconButton } from \"@mui/material\";\nimport { getUserWeatherAC } from \"../../../saga/weatherSaga/actions\";\n\nconst ExploreBtn = ({ getUserWeather }) => {\n  return (\n    <IconButton\n      aria-label=\"Weather on my location\"\n      title=\"Weather on my location\"\n      sx={{ marginLeft: \"16px\" }}\n      onClick={() => getUserWeather()}\n    >\n      <ExploreIcon />\n    </IconButton>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getUserWeather: () => dispatch(getUserWeatherAC()),\n});\n\nexport default connect(null, mapDispatchToProps)(ExploreBtn);\n","//action types\nexport const SET_WEATHER = \"weatherReducer/SET_WEATHER\";\nexport const SET_PLACES = \"weatherReducer/SET_PLACES\";\n\n//action creators\nexport const setWeatherAC = (payload) => ({ type: SET_WEATHER, payload });\nexport const setPlacesAC = (payload) => ({ type: SET_PLACES, payload });\n","import { List, ListItemButton, ListItemText, Typography } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nconst StiledList = styled.div`\n  position: fixed;\n  z-index: 100;\n  width: 35%;\n  padding: 0 17px 0 0;\n  margin-top: 3px;\n  color: rgba(0, 0, 0, 0.75);\n  @media (max-width: 600px) {\n    width: 100%;\n    padding-right: 32px;\n  }\n`;\n\nconst style = {\n  width: \"100%\",\n  bgcolor: \"background.paper\",\n};\n\nconst ListItems = ({ list, setWeather }) => {\n  const items = list.map((item) => {\n    return (\n      <ListItemButton key={item.id} onClick={() => setWeather(item)}>\n        <ListItemText primary={`${item.name}, ${item.sys.country}`} />\n        <ListItemText sx={{ textAlign: \"end\" }}>\n          <Typography variant=\"caption\">{`Lat: ${item.coord.lat}, Lon: ${item.coord.lon}`}</Typography>\n        </ListItemText>\n      </ListItemButton>\n    );\n  });\n  return (\n    <>\n      {!!list.length && (\n        <StiledList>\n          <List sx={style}>{items}</List>\n        </StiledList>\n      )}\n    </>\n  );\n};\n\nexport default ListItems;\n","import { connect } from \"react-redux\";\nimport { setWeatherAC } from \"../../redux/weatherReducer/actions\";\nimport ListItems from \"./ListItems\";\n\nconst mstp = (state) => ({\n  list: state.weather.listPlaces,\n});\nconst mdtp = (dispatch) => ({\n  setWeather: (weatherObj) => dispatch(setWeatherAC(weatherObj)),\n});\n\nexport default connect(mstp, mdtp)(ListItems);\n","import { InputBase } from \"@mui/material\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { alpha, styled } from \"@mui/material/styles\";\nimport { useFormik } from \"formik\";\nimport ListItemsContainer from \"../../ListItems/ListItemsContainer\";\n\nconst StyledForm = styled(\"form\")`\n  width: 35%;\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst Search = styled(\"div\")(({ theme }) => ({\n  position: \"relative\",\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  \"&:hover\": {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginLeft: 0,\n  width: \"100%\",\n  [theme.breakpoints.up(\"sm\")]: {\n    width: \"auto\",\n  },\n}));\n\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: \"100%\",\n  position: \"absolute\",\n  pointerEvents: \"none\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: \"inherit\",\n  width: \"100%\",\n  \"& .MuiInputBase-input\": {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nconst SearchField = ({ getPlaces }) => {\n  const formik = useFormik({\n    initialValues: {\n      placeName: \"\",\n    },\n    onSubmit: (values) => {\n      getPlaces(values.placeName);\n    },\n  });\n  return (\n    <>\n      <StyledForm onSubmit={formik.handleSubmit}>\n        <Search>\n          <SearchIconWrapper>\n            <SearchIcon />\n          </SearchIconWrapper>\n          <StyledInputBase\n            id=\"placeName\"\n            name=\"placeName\"\n            onChange={formik.handleChange}\n            value={formik.values.placeName}\n            placeholder=\"Search of place…\"\n            inputProps={{ \"aria-label\": \"search\" }}\n          />\n        </Search>\n        <ListItemsContainer />\n      </StyledForm>\n    </>\n  );\n};\n\nexport default SearchField;\n","import { connect } from \"react-redux\";\nimport { getPlacesAC } from \"../../../saga/weatherSaga/actions\";\nimport SearchField from \"./SearchField\";\n\nconst mdtp = (dispatch) => ({\n  getPlaces: (placeName) => dispatch(getPlacesAC(placeName)),\n});\n\nexport default connect(null, mdtp)(SearchField);\n","import AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport ExploreBtn from \"./ExploreBtn/ExploreBtn\";\nimport SearchFieldContainer from \"./SearchField/SearchFieldContainer\";\n\nexport default function ToolBar() {\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography\n          variant=\"h6\"\n          noWrap\n          component=\"div\"\n          sx={{ flexGrow: \"1\", display: { xs: \"none\", sm: \"block\" } }}\n        >\n          Weather App\n        </Typography>\n        <SearchFieldContainer />\n        <ExploreBtn />\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import BgImage from \"./images/bg3.jpg\";\nimport { Container } from \"@mui/material\";\nimport AlertErrorContainer from \"./components/AlertError/AlertErrorContainer\";\nimport LoaderContainer from \"./components/Loader/LoaderContainer\";\nimport WeatherContainer from \"./components/Weather/WeatherContainer\";\nimport BackgroundImage from \"./components/BackgroungImage/BackgroundImage\";\nimport ToolBar from \"./components/ToolBar/Toolbar\";\n\nconst App = () => {\n  return (\n    <>\n      <BackgroundImage image={BgImage} />\n      <LoaderContainer />\n      <AlertErrorContainer />\n      <ToolBar />\n      <Container maxWidth=\"xs\">\n        <WeatherContainer />\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import {\n  SET_ERROR,\n  DEL_ERROR,\n  SET_LOADING,\n  SET_VISIBLE_ERROR,\n} from \"./actions\";\n\nconst initialState = {\n  isLoading: false,\n  error: { name: null, message: null, isVisible: false },\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.isLoading,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        error: {\n          ...state.error,\n          name: action.error.name,\n          message: action.error.message,\n          isVisible: true,\n        },\n      };\n    case SET_VISIBLE_ERROR:\n      return {\n        ...state,\n        error: {\n          ...state.error,\n          isVisible: action.isVisible,\n        },\n      };\n    case DEL_ERROR:\n      return {\n        ...state,\n        error: {\n          ...state.error,\n          name: null,\n          message: null,\n          isVisible: false,\n        },\n      };\n    default:\n      return state;\n  }\n};\n","//action types\nexport const SET_GEOLOCATION = \"geoReducer/SET_GEOLOCATION\";\n\n//action creators\nexport const setGeolocationAC = (latitude, longitude) => ({\n  type: SET_GEOLOCATION,\n  latitude,\n  longitude,\n});\n","import { SET_GEOLOCATION } from \"./actions\";\n\n//initial state\nconst initialState = { latitude: null, longitude: null };\n\n//reducer\nexport const geoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_GEOLOCATION:\n      return {\n        ...state,\n        latitude: action.latitude,\n        longitude: action.longitude,\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_PLACES, SET_WEATHER } from \"./actions\";\n\nconst initialState = {\n  weatherCard: {\n    isLoading: false,\n    weatherObject: null,\n  },\n  listPlaces: [],\n};\n\nexport const weatherReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_WEATHER:\n      return {\n        ...state,\n        listPlaces: [],\n        weatherCard: {\n          ...state.weatherCard,\n          weatherObject: { ...action.payload },\n        },\n      };\n    case SET_PLACES:\n      return {\n        ...state,\n        listPlaces: action.payload.list,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { appReducer } from \"./appReducer/appReducer\";\nimport { geoReducer } from \"./geoReducer/geoReducer\";\nimport { weatherReducer } from \"./weatherReducer/weatherReducer\";\n\nexport const rootReducer = combineReducers({\n  app: appReducer,\n  geo: geoReducer,\n  weather: weatherReducer,\n});\n","import { fork } from \"@redux-saga/core/effects\";\nimport { setGeolocationAC } from \"../../redux/geoReducer/actions\";\nimport { store } from \"../../store\";\nimport { getUserWeatherAC } from \"../weatherSaga/actions\";\n\n//watcher\nexport function* geoSaga() {\n  yield fork(getGeoCoords);\n}\n\n//workers\nfunction* getGeoCoords() {\n  yield navigator.geolocation.getCurrentPosition((position) => {\n    store.dispatch(\n      setGeolocationAC(position.coords.latitude, position.coords.longitude)\n    );\n    store.dispatch(getUserWeatherAC());\n  });\n}\n","import { create } from \"axios\";\n\nexport const apiKey = \"126fad45ab3e35a9cdeb368c5606d982\";\n\nconst instance = create({\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\n  params: {\n    appid: apiKey,\n    units: \"metric\",\n  },\n});\n\nexport default instance;\n","import * as axios from \"axios\";\nimport instance from \"./instance\";\n\nconst getPlaces = (placeName) => {\n  return instance.get(`find?q=${placeName}`).then((response) => response.data);\n};\n\nconst getWeatherByCityName = (cityName) => {\n  return instance\n    .get(`weather?q=${cityName}`)\n    .then((response) => response.data);\n};\n\nconst getWeaatherByCityID = (cityId) => {\n  return instance.get(`weather?id=${cityId}`).then((response) => response.data);\n};\n\nconst getWeatherByCoords = (lat, lon) => {\n  return instance\n    .get(`weather?lat=${lat}&lon=${lon}`)\n    .then((response) => response.data);\n};\n\nconst gerWeatherByZIPCode = (zipCode, countryCode) => {\n  return axios\n    .get(`weather?zip=${zipCode},${countryCode}`)\n    .then((response) => response.data);\n};\n\nexport const weatherApi = {\n  getPlaces,\n  getWeatherByCityName,\n  getWeaatherByCityID,\n  getWeatherByCoords,\n  gerWeatherByZIPCode,\n};\n","export class GeolocationError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = \"Geolocation Error\";\n    this.message = message || \"Geolocation data not found\";\n  }\n}\n","import { put, select, takeLeading, call } from \"@redux-saga/core/effects\";\n\nimport { weatherApi } from \"../../api/weatherApi\";\n\nimport { GeolocationError } from \"../../classes/GeolocationError\";\nimport { setErrorAC, setLoadingAC } from \"../../redux/appReducer/actions\";\nimport { setPlacesAC, setWeatherAC } from \"../../redux/weatherReducer/actions\";\nimport { FIND_PLACES, GET_USER_WEATHER } from \"./actions\";\n\n//watcher\nexport function* weatherSaga() {\n  yield takeLeading(GET_USER_WEATHER, getUserCoords);\n  yield takeLeading(FIND_PLACES, getPlaces);\n}\n\n//workers\nfunction* getUserCoords() {\n  try {\n    yield put(setLoadingAC(true));\n    const lat = yield select((state) => state.geo.latitude);\n    const lon = yield select((state) => state.geo.longitude);\n    if (!lat || !lon) {\n      throw new GeolocationError(\"Requires permission to use geolocation\");\n    }\n    const weather = yield call(weatherApi.getWeatherByCoords, lat, lon);\n    yield put(setWeatherAC(weather));\n  } catch (error) {\n    yield put(setErrorAC(error));\n  } finally {\n    yield put(setLoadingAC(false));\n  }\n}\n\nfunction* getPlaces({ placeName }) {\n  try {\n    yield put(setLoadingAC(true));\n    const response = yield call(weatherApi.getPlaces, placeName);\n    yield put(setPlacesAC(response));\n  } catch (error) {\n    yield put(setErrorAC(error));\n  } finally {\n    yield put(setLoadingAC(false));\n  }\n}\n","import { spawn } from \"redux-saga/effects\";\nimport { geoSaga } from \"./geoSaga/geoSaga\";\nimport { weatherSaga } from \"./weatherSaga/weatherSaga\";\n\nexport function* rootSaga() {\n  // const sagas = [geoSaga, weatherSaga];\n\n  yield spawn(geoSaga);\n  yield spawn(weatherSaga);\n}\n","import { compose, createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { rootSaga } from \"./saga/rootSaga\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleWare = createSagaMiddleware();\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleWare))\n);\n\nsagaMiddleWare.run(rootSaga);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}